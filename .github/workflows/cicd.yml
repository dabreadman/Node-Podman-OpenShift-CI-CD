name: CI/CD22

env:
  # Using Quay.io
  REGISTRY: quay.io
  REGISTRY_USERNAME: dabreadman
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  CONTAINER: "podman"

  # OpenShift Token
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  APP_PORT: 8080
  OPENSHIFT_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE }}

  APP_NAME: "covid-app"
  TAG: ""

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  dev-deployment:
    name: Build and deploy to OpenShift Dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./covid-vue-app
    environment: development

    outputs:
      image: ${{ steps.image.outputs.image }}

    steps:
      - name: Check if secrets exists
        uses: actions/github-script@v3
        with:
          script: |
            const secrets = {
              REGISTRY_PASSWORD: `${{ env.REGISTRY_PASSWORD }}`,
              OPENSHIFT_SERVER: `${{ env.OPENSHIFT_SERVER }}`,
              OPENSHIFT_TOKEN: `${{ env.OPENSHIFT_TOKEN }}`,
            };

            const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
              if (value.length === 0) {
                core.warning(`Secret "${name}" is not set`);
                return true;
              }
              core.info(`✔️ Secret "${name}" is set`);
              return false;

            });

            if (missingSecrets.length > 0) {
              core.setFailed(`❌ At least one required secret is not set in the repository. \n` +
                "You can add it using:\n" +
                "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
                "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
                "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
            }
            else {
              core.info(`✅ All the required secrets are set`);
            }

      - uses: actions/checkout@v2

      - name: Determine app name
        if: env.APP_NAME == ''
        run: |
          echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

      - name: Determine tag
        if: env.TAG == ''
        run: |
          echo "TAG=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV
          
      - name: Docker Layer Caching 2
        uses: dabreadman/action-docker-layer-caching@vb.t.1
        with:
          container: ${{ env.CONTAINER }}

      - name: Build image, run lint/test
        run: ${{ env.CONTAINER }} build . --file Dockerfile --tag ${{ env.REGISTRY }}/${{ env.REGISTRY_USERNAME }}/${{ env.APP_NAME }}:${{ env.TAG }}

